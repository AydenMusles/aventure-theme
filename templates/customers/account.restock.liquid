{% comment %} Creates an array of products already bought by the customer {% endcomment %}
{% comment %} Problème connu: sorting par quantité ne prend pas en compte la quantité totale commandée mais la quantité max commandée au cours du temps {% endcomment %}
{% assign bought_products = "" | split: ',' %}
{% for order in customer.orders %}
  {% assign bought_products = bought_products | concat: order.line_items %}
{% endfor %}

{% comment %} option1 {% endcomment %}
{% comment %} {% assign bought_products = bought_products | sort: 'quantity' | reverse | map: 'product' | map: 'handle' | uniq %} {% endcomment %}
{% assign bought_products = bought_products | sort: 'quantity' | reverse | map: 'product' | uniq %}

{%- assign per_row = 5 -%}

<div class="page-width">
  <div class="grid grid--uniform grid--collection">
    {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}

    {% case per_row %}
    {% when 2 %}
      {%- assign grid_item_width = 'medium-up--one-half' -%}
    {% when 3 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
    {% when 4 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
    {% when 5 %}
      {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
    {% endcase %}

    {% for product in bought_products %}
      {% if product.available %}
        {% include 'product-grid-item' %}
      {% endif %}
    {% endfor %}

    {% comment %} option1 {% endcomment %}
    {% comment %} {% for handle in bought_products %}
    {% assign ha = handle | strip %}
      {% assign product = all_products[handle] %}
      {% if product.available %}
      {% assign product_json = product | json %}
      {% unless product_json == '{"error":"json not allowed for this object"}' %}
        {% include 'product-grid-item' %}
        {% endunless %}
      {% endif %}
    {% endfor %} {% endcomment %}
  </div>
</div>
